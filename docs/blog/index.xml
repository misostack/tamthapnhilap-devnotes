<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on DevNotes 2019</title>
    <link>//devnotes.tamthapnhilap.site/blog/</link>
    <description>Recent content in Blogs on DevNotes 2019</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi-VN</language>
    <copyright>Everything is mine</copyright>
    <lastBuildDate>Fri, 17 Aug 2018 14:20:36 +0700</lastBuildDate><atom:link href="//devnotes.tamthapnhilap.site/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Backend Roadmap</title>
      <link>//devnotes.tamthapnhilap.site/blog/backend-roadmap/</link>
      <pubDate>Fri, 17 Aug 2018 14:20:36 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/backend-roadmap/</guid>
      <description>The right ways 1. Pick a language  If you are a beginner, pick one of scripting languages like: php, ruby, python, node.js( typescript ) If you have some frontend knowledge, you might fight node.js to be quite easier plus. If you have knowledge with one of scripting languages above, improve your knowledge and go deeper with it.  In this first steps, your targets can be:
 Base knowledge of a scripting language OOP Programming Basic knowledge about HTTP Request and Response Common: Array Manipulation, File IO, CSV, JSON Package manager Library Unit Test  Main targets:</description>
    </item>
    
    <item>
      <title>The Api World</title>
      <link>//devnotes.tamthapnhilap.site/blog/the-api-world/</link>
      <pubDate>Thu, 16 Aug 2018 16:00:49 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/the-api-world/</guid>
      <description>References  https://www.moesif.com/blog/api-guide/api-design-guidelines/ https://www.restapitutorial.com/lessons/restfulresourcenaming.html https://www.programmableweb.com/category/all/apis  Completely Stateless  Origin : https://www.youtube.com/watch?v=67mezK3NzpU  1.Several problems with session id
One server is not enough
 We use load balancer? Where to stored memory?  =&amp;gt; This will lead us to shared cache ==&amp;gt; not works with a overloading connections =&amp;gt; Distributed cache ( but complicated )
 Sticky sessions in load balancer?  ==&amp;gt; Sticky sessions + distributed cache
Manage this in client side: JSON + WEB + TOKEN ( JWT )  JWT vs SessionID</description>
    </item>
    
    <item>
      <title>Go Pros and Cons</title>
      <link>//devnotes.tamthapnhilap.site/blog/go-pros-and-cons/</link>
      <pubDate>Thu, 12 Jul 2018 13:47:31 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/go-pros-and-cons/</guid>
      <description>GO là gì Pros of GO  Fast Easy to learn Readable language Simple, reliable and productive  Cons of GO  No Generics Not suitable for realtime application  Whether to Use Go References  https://willowtreeapps.com/ideas/the-pros-and-cons-of-programming-in-go https://techtalk.vn/golang-thuc-su-tot-trong-truong-hop-nao.html  How do i start?  Starting More about GO Ebooks References GoByExample  </description>
    </item>
    
    <item>
      <title>Ruby Pros and Cons</title>
      <link>//devnotes.tamthapnhilap.site/blog/ruby-pros-and-cons/</link>
      <pubDate>Wed, 11 Jul 2018 16:16:16 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/ruby-pros-and-cons/</guid>
      <description>Ruby là gì Pros of Ruby  Clear syntax Best Industry Standards: MVC, DRY(Don&amp;rsquo;t repeat yourself), TDD ( Rspec ) The leading framework of ruby is Ruby on Rails(ROR) Speed of Development with big community, dozens of open-source lib calls &amp;ldquo;gems&amp;rdquo; As an added bonus, Rails ships with a default ORM system (ActiveRecord) Vibrant RoR Community You can develop MVP very fast on Ruby, it takes less time than on other languages.</description>
    </item>
    
    <item>
      <title>Php Pros and Cons</title>
      <link>//devnotes.tamthapnhilap.site/blog/php-pros-and-cons/</link>
      <pubDate>Wed, 11 Jul 2018 15:36:24 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/php-pros-and-cons/</guid>
      <description>PHP là gì Điểm mạnh  Dễ học, cú pháp cực kì đơn giản Cộng đồng lớn, nhiều framework lớn : Symfony, Laravel Đặc biệt CMS nổi tiếng hiện nay: wordpress Free, nhiều hosting hỗ trợ  Điểm yếu  Là ngôn ngữ thông dịch interpreted Sinh ra để làm web  Bắt đầu  PHP Tutorial : for newbie Wordpress : cms Codeignter : simple mvc php framework Symfony : large and powerful php framework Laravel : hot framework Lumen : build effective REST API  </description>
    </item>
    
    <item>
      <title>Nodejs Pros and Cons</title>
      <link>//devnotes.tamthapnhilap.site/blog/nodejs-pros-and-cons/</link>
      <pubDate>Wed, 11 Jul 2018 10:48:10 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/blog/nodejs-pros-and-cons/</guid>
      <description>Đầu tiên nodejs là cái quái gì vậy? Bạn nghĩ sao nếu javascript có thể chạy trên máy chủ? Các đặc tính quan trọng của nodejs Một điển hình về mô hình truyền thống
Mô hình mà js ở phía server
Được sự hậu thuẩn của google
Node.js® is a JavaScript runtime built on Chrome&amp;#39;s V8 JavaScript engine. Trang chủ download nodejs: nodejs.org
As an asynchronous event driven JavaScript runtime, Node is designed to build scalable network applications</description>
    </item>
    
  </channel>
</rss>
