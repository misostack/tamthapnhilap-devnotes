<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on DevNotes 2019</title>
    <link>//devnotes.tamthapnhilap.site/note/</link>
    <description>Recent content in Notes on DevNotes 2019</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi-VN</language>
    <copyright>Everything is mine</copyright>
    <lastBuildDate>Wed, 23 Oct 2019 14:18:56 +0700</lastBuildDate>
    
	<atom:link href="//devnotes.tamthapnhilap.site/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Monday Api 001 Dev</title>
      <link>//devnotes.tamthapnhilap.site/note/monday-api-001-dev/</link>
      <pubDate>Wed, 23 Oct 2019 14:18:56 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/monday-api-001-dev/</guid>
      <description>Things need to do: Design REST API Endpoints Design Application Structures Design Models, Schemas, Services Design Shared or Core classes, functions Document REST API Endpoints Design Data Validations Design Pagination, Search Integrate Services with Related Resources Secured: CORS, JWT Testing API with Postman Improvement with: Index, Caching, Elastic Search,&amp;hellip; Automation: make generators that generate new resources endpoint from json data Common Services: Mailer &amp;amp; SMS, Cron, Task Queues Deployment: Heroku, VPS, CI &amp;amp; CD with circle ci  Related things:</description>
    </item>
    
    <item>
      <title>Iome 001 Initialize</title>
      <link>//devnotes.tamthapnhilap.site/note/iome-001-initialize/</link>
      <pubDate>Wed, 21 Nov 2018 16:16:13 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/iome-001-initialize/</guid>
      <description>Requirements  Bài toán 1: SimpleAuth - xây dựng chức năng auth đơn giản, ko cần phân quyền theo module Bài toán 2: SimpleTodoList: List(Group Of TodoList), Statuses( Backlog, OnGoing, Postponed, ToBeTested, TobeValidated, Closed ), Types(2M, A, B, C, D) Bài toán 3: Messages: nhật kí dự án( message, statuses[&amp;lsquo;new&amp;rsquo;,&amp;lsquo;done&amp;rsquo;,&amp;lsquo;inprogress&amp;rsquo;,&amp;lsquo;error&amp;rsquo;,&amp;lsquo;delayed&amp;rsquo;,&amp;lsquo;removed&amp;rsquo;]) Bài toán 4: Status: system status( status, statuses[&amp;lsquo;up&amp;rsquo;,&amp;lsquo;bug&amp;rsquo;,&amp;lsquo;down&amp;rsquo;])  Diễn giải 2M: 2 minutes work: do it now, and the deadline is in 10 mins.</description>
    </item>
    
    <item>
      <title>Ng CRMExpress 001</title>
      <link>//devnotes.tamthapnhilap.site/note/ng-crmexpress-001/</link>
      <pubDate>Mon, 01 Oct 2018 10:48:28 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/ng-crmexpress-001/</guid>
      <description>Introduction Tại sao cần CRM?
 Chăm sóc khách hàng ngay từ khi chưa là khách hàng : https://www.youtube.com/watch?v=6omS6AF4-ww  Mục tiêu: xây dựng tiềm thức trong khách hàng về brand name.
Đây là phiên bản CRM miễn phí dành cho các doanh nghiệp vừa và nhỏ Việt Nam. Phần mềm được viết dựa trên angular 6. Phần mềm sẽ gồm 3 đối tượng: Owner, Users, Customer. - Mỗi account Owner được phép tạo 1 tổ chức(company).</description>
    </item>
    
    <item>
      <title>Reactjs Ways - React Router - React Redux</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-003/</link>
      <pubDate>Fri, 03 Aug 2018 10:18:06 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-003/</guid>
      <description>1.Install  Refs : https://reacttraining.com/react-router/web/guides/philosophy
npm install react-router-dom -D   2.Folder Structure Refs: https://engineering.opsgenie.com/how-to-organize-react-files-before-its-messed-up-c85387f691be
There are several ways, but in summary:
By File Type
This is very simple structure which almost use for small application and for learning purpose
└── src └── actions └── group.js └── user.js └── components └── group-list.js └── group-item.js └── user-avatar.js └── user-box.js └── user-item.js └── containers └── App.js └── group.js └── user.js └── reducers └── group.</description>
    </item>
    
    <item>
      <title>Reactjs Ways - Advanced Solutions</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-002/</link>
      <pubDate>Tue, 31 Jul 2018 13:56:05 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-002/</guid>
      <description>1.Accessibility Refs
 Full of story Checklist
 WAI-ARIA
&amp;lt;div className=&amp;quot;form-group&amp;quot;&amp;gt; &amp;lt;label&amp;gt;Email address&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;quot;email&amp;quot; aria-label={`Please enter your email`} aria-required=&amp;quot;true&amp;quot; className=&amp;quot;form-control&amp;quot; onChange={this.handleChange} value={this.state.email} name=&amp;quot;email&amp;quot; aria-describedby=&amp;quot;emailHelp&amp;quot; placeholder=&amp;quot;Enter email&amp;quot; /&amp;gt; &amp;lt;small id=&amp;quot;emailHelp&amp;quot; className=&amp;quot;form-text text-muted&amp;quot;&amp;gt;We&#39;ll never share your email with anyone else.&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt;  Semantic HTML
 Accessible Forms
&amp;lt;div className=&amp;quot;form-group&amp;quot;&amp;gt; &amp;lt;label htmlFor=&amp;quot;email&amp;quot;&amp;gt;Email address&amp;lt;/label&amp;gt; &amp;lt;input id=&amp;quot;email&amp;quot; type=&amp;quot;email&amp;quot; aria-label={`Please enter your email`} aria-required=&amp;quot;true&amp;quot; className=&amp;quot;form-control&amp;quot; onChange={this.handleChange} value={this.state.email} name=&amp;quot;email&amp;quot; aria-describedby=&amp;quot;emailHelp&amp;quot; placeholder=&amp;quot;Enter email&amp;quot; /&amp;gt; &amp;lt;small id=&amp;quot;emailHelp&amp;quot; className=&amp;quot;form-text text-muted&amp;quot;&amp;gt;We&#39;ll never share your email with anyone else.</description>
    </item>
    
    <item>
      <title>Reactjs Ways - Main Concepts</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-001/</link>
      <pubDate>Tue, 31 Jul 2018 13:47:58 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-001/</guid>
      <description>1.JSX  javascript syntax extension Since JSX is closer to JavaScript than to HTML, React DOM uses camelCase property naming convention instead of HTML attribute names.   const element = &amp;lt;img src={user.avatarUrl}&amp;gt;&amp;lt;/img&amp;gt;; const element = &amp;lt;h1&amp;gt;Hello, {formatName(user)}!&amp;lt;/h1&amp;gt; const element = React.createElement( &#39;h1&#39;, {className: &#39;greeting&#39;}, &#39;Hello, world!&#39; ); ReactDOM.render(element, document.getElementById(&#39;root&#39;));  2.Render  Elements are the smallest building blocks of React apps. React elements are immutable. Once you create an element, you can’t change its children or attributes React Only Updates What’s Necessary   ReactDOM.</description>
    </item>
    
  </channel>
</rss>