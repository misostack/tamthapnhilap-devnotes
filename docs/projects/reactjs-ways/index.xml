<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reactjs-ways on DevNotes 2019</title>
    <link>//devnotes.tamthapnhilap.site/projects/reactjs-ways/</link>
    <description>Recent content in reactjs-ways on DevNotes 2019</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi-VN</language>
    <copyright>Everything is mine</copyright>
    <lastBuildDate>Fri, 03 Aug 2018 10:18:06 +0700</lastBuildDate><atom:link href="//devnotes.tamthapnhilap.site/projects/reactjs-ways/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reactjs Ways - React Router - React Redux</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-003/</link>
      <pubDate>Fri, 03 Aug 2018 10:18:06 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-003/</guid>
      <description>1.Install  Refs : https://reacttraining.com/react-router/web/guides/philosophy  npm install react-router-dom -D 2.Folder Structure Refs: https://engineering.opsgenie.com/how-to-organize-react-files-before-its-messed-up-c85387f691be
There are several ways, but in summary:
By File Type
This is very simple structure which almost use for small application and for learning purpose
└── src └── actions └── group.js └── user.js └── components └── group-list.js └── group-item.js └── user-avatar.js └── user-box.js └── user-item.js └── containers └── App.js └── group.js └── user.js └── reducers └── group.</description>
    </item>
    
    <item>
      <title>Reactjs Ways - Advanced Solutions</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-002/</link>
      <pubDate>Tue, 31 Jul 2018 13:56:05 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-002/</guid>
      <description>1.Accessibility Refs
  Full of story
  Checklist
  WAI-ARIA
  &amp;lt;div className=&amp;#34;form-group&amp;#34;&amp;gt; &amp;lt;label&amp;gt;Email address&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;#34;email&amp;#34; aria-label={`Please enter your email`} aria-required=&amp;#34;true&amp;#34; className=&amp;#34;form-control&amp;#34; onChange={this.handleChange} value={this.state.email} name=&amp;#34;email&amp;#34; aria-describedby=&amp;#34;emailHelp&amp;#34; placeholder=&amp;#34;Enter email&amp;#34; /&amp;gt; &amp;lt;small id=&amp;#34;emailHelp&amp;#34; className=&amp;#34;form-text text-muted&amp;#34;&amp;gt;We&amp;#39;ll never share your email with anyone else.&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt;   Semantic HTML
  Accessible Forms
  &amp;lt;div className=&amp;#34;form-group&amp;#34;&amp;gt; &amp;lt;label htmlFor=&amp;#34;email&amp;#34;&amp;gt;Email address&amp;lt;/label&amp;gt; &amp;lt;input id=&amp;#34;email&amp;#34; type=&amp;#34;email&amp;#34; aria-label={`Please enter your email`} aria-required=&amp;#34;true&amp;#34; className=&amp;#34;form-control&amp;#34; onChange={this.</description>
    </item>
    
    <item>
      <title>Reactjs Ways - Main Concepts</title>
      <link>//devnotes.tamthapnhilap.site/note/reactjs-ways-001/</link>
      <pubDate>Tue, 31 Jul 2018 13:47:58 +0700</pubDate>
      
      <guid>//devnotes.tamthapnhilap.site/note/reactjs-ways-001/</guid>
      <description>1.JSX const element = &amp;lt;img src={user.avatarUrl}&amp;gt;&amp;lt;/img&amp;gt;; const element = &amp;lt;h1&amp;gt;Hello, {formatName(user)}!&amp;lt;/h1&amp;gt; const element = React.createElement( &amp;#39;h1&amp;#39;, {className: &amp;#39;greeting&amp;#39;}, &amp;#39;Hello, world!&amp;#39; ); ReactDOM.render(element, document.getElementById(&amp;#39;root&amp;#39;)); 2.Render ReactDOM.render(element, document.getElementById(&amp;#39;root&amp;#39;)); https://en.wikipedia.org/wiki/Immutable_object
3.Components and Props  Rendering a Component Composing Components Extracting Components Props are Read-Only  The simplest way to define a component is to write a JavaScript function:
function Welcome(props) { return &amp;lt;h1&amp;gt;Hello, {props.name}&amp;lt;/h1&amp;gt;; } Common way to define a component(ES6 class):
class Welcome extends React.</description>
    </item>
    
  </channel>
</rss>
